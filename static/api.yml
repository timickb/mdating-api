openapi: '3.0.2'
info:
  title: MIR Dating API
  version: 'indev'
servers:
  - url: localhost:5000

paths:
  # get/put/patch/delete profile
  /api/profiles/{profileId}:
    # patch profile
    patch:
      summary: "Заменяет указанные параметры пользовательского профиля с указанным идентификатором."
      parameters:
        - in: path
          name: profileId
          schema:
            type: integer
          required: true
          description: "Целое положительное число - идентификатор профиля."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
        '200':
          description: "При успешном обновлении профиля возвращается статус ОК"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
        '403':
          description: "Нет прав на совершение операции."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    type: string
                    example: "You don't have permission to update profile."
        '422':
          description: "Одно или более из параметров профиля имеют недопустимое значение."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    $ref: "#/components/schemas/Error"
    # put profile
    put:
      summary: "Заменяет пользовательский профиль с указанным идентификатором на другой."
      parameters:
        - in: path
          name: profileId
          schema:
            type: integer
          required: true
          description: "Целое положительное число - идентификатор профиля."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
        '200':
          description: "При успешном обновлении профиля возвращается статус ОК"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
        '403':
          description: "Нет прав на совершение операции."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    type: string
                    example: "You don't have permission to update profile."
        '422':
          description: "Одно или более из параметров профиля имеют недопустимое значение."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Incorrect data"
                  error:
                    $ref: "#/components/schemas/Error"
    # delete profile
    delete:
      summary: "Удаляет пользовательский профиль с указанным идентификатором."
      parameters:
        - in: path
          name: profileId
          schema:
            type: integer
          required: true
          description: "Целое положительное число - идентификатор профиля."
      responses:
        '200':
          description: "Сообщение об успешном удалении профиля."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK" 
        '404':
          description: "Профиль с указанным идентификатором не найден."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    type: string
                    example: "Profile with id 1 doesn't exist"
        '403':
          description: "Нет прав на совершение операции."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    $ref: "#/components/schemas/Error"
    get:
      summary: "Возвращает пользовательский профиль по указанному идентификатору."
      #description: "Возвращает пользовательский профиль по указанному идентификатору."
      parameters:
        - in: path
          name: profileId
          schema:
            type: integer
          required: true
          description: "Целое положительное число - идентификатор профиля."
      responses:
        '200':
          description: "Профиль пользователя в формате JSON."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        '404':
          description: "Профиль с указанным идентификатором не найден."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    $ref: "#/components/schemas/Error"
        '403':
          description: "Нет прав на получение данных."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    $ref: "#/components/schemas/Error"
  # post profile                
  /api/profiles/:
    post:
      summary: "Добавляет в систему новый профиль и возвращает присвоенный ему идентификатор."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"   
      responses:
        '200':
          description: "При успешном добавлении нового профиля возвращается присвоенный профилю идентификатор"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 8
        '403':
          description: "Нет прав на совершение операции."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    $ref: "#/components/schemas/Error"
        '422':
          description: "Одно или более из параметров профиля имеют недопустимое значение."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Error"
                  error:
                    $ref: "#/components/schemas/Error"

  /api/shops:




components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 422
        message:
          type: string
          example: "Incorrect input data"
    Profile:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstname:
          type: string
          example: "Andrew"
        login:
          type: string
          example: "dh872jka"
        bio:
          type: string
          example: "skip me please"
        birthDate:
          type: string
          format: date-time          
          example: "01-01-1970"   

    Shop:
      type: object
      properties:
        id:
          type: integer
          example: 1
        location:
          type: string
          example: "Pokrovsky b-d, 11"
        name:
          type: string
          example: "Pear-6"
          
