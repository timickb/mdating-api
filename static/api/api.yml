openapi: '3.0.2'
info:
  title: MIR Dating API
  version: 'indev'
servers:
  - url: localhost:5000

paths:
  /api/shops/{shopId}:
    get:
      summary: "Возвращает информацию о магазине по указанному идентификатору."
      parameters: [ $ref: "#/components/parameters/ShopId" ]
      responses:
        200:
          description: "Информация о магазине в формате JSON."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  data:
                    $ref: "#/components/schemas/Shop"
        404:
          $ref: "./responses.yml#/components/responses/404"
        403:
          $ref: "./responses.yml#/components/responses/403"
    delete:
      summary: "Удаляет магазин с указанным идентификатором"
      parameters: [ $ref: "#/components/parameters/ShopId" ]
      responses:
        200:
          description: "Информация о магазине в формате JSON."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
        404:
          $ref: "./responses.yml#/components/responses/404"
        403:
          $ref: "./responses.yml#/components/responses/403"
    put:
      summary: "Заменяет объект магазина с указанным идентификатором на другой объект"
      parameters: [ $ref: "#/components/parameters/ShopId" ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./models/profile.yml#/components/schemas/Shop"
      responses:
        200:
          description: "При успешном обновлении магазина возвращается статус ОК"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
        403:
          $ref: "./responses.yml#/components/responses/403"
        422:
          $ref: "./responses.yml#/components/responses/422"
    patch:
      summary: "Заменяет некоторые параметры магазина с указанным идентификатором"
      parameters: [ $ref: "#/components/parameters/ShopId" ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./models/shop.yml#/components/schemas/Shop"
      responses:
        200:
          description: "При успешном обновлении параметров возвращается статус ОК"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
        403:
          $ref: "./responses.yml#/components/responses/403"
        422:
          $ref: "./responses.yml#/components/responses/422"

  /api/shops/:
    post:
      summary: "Добавляет в систему новый магазин."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./models/shop.yml#/components/schemas/Shop"
      responses:
        200:
          description: "При успешном добавлении магазина возвращается статус ОК"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  data:
                    $ref: "./models/shop.yml#/components/schemas/Shop"
        403:
          $ref: "./responses.yml#/components/responses/403"
        422:
          $ref: "./responses.yml#/components/responses/422"

  # get/put/patch/delete profile
  /api/profiles/{profileId}:
    # patch profile
    patch:
      summary: "Заменяет указанные параметры пользовательского профиля с указанным идентификатором."
      parameters: [ $ref: "#/components/parameters/ProfileId" ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./models/profile.yml#/components/schemas/Profile"
      responses:
        200:
          description: "При успешном обновлении профиля возвращается статус ОК"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
        403:
          $ref: "./responses.yml#/components/responses/403"
        422:
          $ref: "./responses.yml#/components/responses/422"
    # put profile
    put:
      summary: "Заменяет пользовательский профиль с указанным идентификатором на другой."
      parameters: [ $ref: "#/components/parameters/ProfileId" ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./models/profile.yml#/components/schemas/Profile"
      responses:
        200:
          description: "При успешном обновлении профиля возвращается статус ОК"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
        403:
          $ref: "./responses.yml#/components/responses/403"
        422:
          $ref: "./responses.yml#/components/responses/422"
    # delete profile
    delete:
      summary: "Удаляет пользовательский профиль с указанным идентификатором."
      parameters: [ $ref: "#/components/parameters/ProfileId" ]
      responses:
        200:
          description: "Сообщение об успешном удалении профиля."
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK" 
        404:
          $ref: "./responses.yml#/components/responses/404"
        403:
          $ref: "./responses.yml#/components/responses/403"
    get:
      summary: "Возвращает пользовательский профиль по указанному идентификатору."
      #description: "Возвращает пользовательский профиль по указанному идентификатору."
      parameters: [ $ref: "#/components/parameters/ProfileId" ]
      responses:
        200:
          description: "Профиль пользователя в формате JSON."
          content:
            application/json:
              schema:
                $ref: "./models/profile.yml#/components/schemas/Profile"
        404:
          $ref: "./responses.yml#/components/responses/404"
        403:
          $ref: "./responses.yml#/components/responses/403"
  # post profile                
  /api/profiles/:
    post:
      summary: "Добавляет в систему новый профиль и возвращает присвоенный ему идентификатор."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./models/profile.yml#/components/schemas/Profile"   
      responses:
        200:
          description: "При успешном добавлении нового профиля возвращается назад его содержимое с присовенным идентификатором"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  data:
                    $ref: "./models/profile.yml#/components/schemas/Profile"
        403:
          $ref: "./responses.yml#/components/responses/403"
        422:
          $ref: "./responses.yml#/components/responses/422"



components:
  parameters:
    ProfileId:
      in: path
      name: profileId
      schema:
        type: integer
      required: true
      description: "Целое положительное число - идентификатор профиля."
    ShopId:
      in: path
      name: shopId
      schema:
        type: integer
      required: true
      description: "Целое положительное число - идентификатор магазина."
  
    
    
          
